version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 3

  auth_service:
    build:
      context: ./auth_service
      dockerfile: ./Dockerfile
    container_name: auth_service
    ports:
      - "8003:8003"
    environment:
      DB_HOST: auth_db
      DB_PORT: 5432
      DB_NAME: AuthDB
      DB_USER: postgres
      DB_PASSWORD: postgres
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    volumes:
      - ./auth_service:/app
    depends_on:
      auth_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8003"]
      interval: 10s
      retries: 3

  auth_db:
    image: postgres:15.3
    container_name: auth_db
    environment:
      POSTGRES_DB: AuthDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 3

  post_service:
    build:
      context: ./post_service
      dockerfile: ./Dockerfile
    container_name: post_service
    ports:
      - "8006:8006"
    environment:
      DB_HOST: post_db
      DB_PORT: 5432
      DB_NAME: PostDB
      DB_USER: postgres
      DB_PASSWORD: postgres
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    volumes:
      - ./post_service:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
      post_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8006"]
      interval: 10s
      retries: 3

  post_db:
    image: postgres:15.3
    container_name: post_db
    environment:
      POSTGRES_DB: PostDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - post_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 3

  subscription_service:
    build:
      context: ./subscription_service
      dockerfile: ./Dockerfile
    container_name: subscription_service
    ports:
      - "8007:8007"
    environment:
      DB_HOST: subscription_db
      DB_PORT: 5432
      DB_NAME: SubscriptionDB
      DB_USER: postgres
      DB_PASSWORD: postgres
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    volumes:
      - ./subscription_service:/app
    depends_on:
      subscription_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8007"]
      interval: 10s
      retries: 3

  subscription_db:
    image: postgres:15.3
    container_name: subscription_db
    environment:
      POSTGRES_DB: SubscriptionDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - subscription_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /dev/null:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      auth_service:
        condition: service_healthy
      post_service:
        condition: service_healthy
      subscription_service:
        condition: service_healthy
      admin_service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/auth/"]
      interval: 10s
      retries: 3

  admin_service:
    build:
      context: ./admin_service
      dockerfile: ./admin.Dockerfile
    container_name: admin_service
    ports:
      - "8009:8009"
    environment:
      DB_HOST: admin_db
      DB_PORT: 5432
      DB_NAME: AdminDB
      DB_USER: postgres
      DB_PASSWORD: postgres
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    volumes:
      - ./admin_service:/app
    depends_on:
      admin_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8009"]
      interval: 10s
      retries: 3

  admin_db:
    image: postgres:15.3
    container_name: admin_db
    environment:
      POSTGRES_DB: AdminDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5436:5432"
    volumes:
      - admin_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 3

volumes:
  auth_db_data:
  post_db_data:
  subscription_db_data:
  rabbitmq_data:
  admin_db_data: